# This is a hands-on task to create the cloudformation stack with
# 2 EC2 instances in total & one s3 bucket
# Webserver with 8gb EBS
# Appserver with 10gb EBS
<<<<<<< HEAD
# One S3 bucket to store invoice pds files

Parameters:
  InstanceTypeParam:
    Type: String
    Default: "t2.micro" 
    Description: "EC2 Type for creation"

Resources: 
  KamsiWebserver:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-0022f774911c1d690"
      InstanceType: !Ref InstanceTypeParam
      KeyName: "Kamsi-Bastion-KP"
=======
# One S3 bucket to store invoice pdf files

Parameters:
  EC2InstanceType:
    Type: String
    Default: "t2.micro"
    Description: "put required ec2 instance type, default is t2.micro"  

Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings: 
      - DeviceName: "/dev/sdm"
        Ebs: 
          VolumeType: "io1"
          Iops: 100
          DeleteOnTermination: true
          VolumeSize: 8
      ImageId: "ami-0022f774911c1d690"
      InstanceType: !Ref EC2InstanceType
      KeyName: "LinuxServer"      
      
  AppServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-0022f774911c1d690"
      InstanceType: !Ref EC2InstanceType
      KeyName: "LinuxServer"
>>>>>>> 5ad265b6c291ab27c4efbf50b3bb55704d94bdeb
      BlockDeviceMappings: 
      - DeviceName: "/dev/sdm"
        Ebs: 
          VolumeType: "io1"
<<<<<<< HEAD
          Iops: "100"
          DeleteOnTermination: "true"
          VolumeSize: "8"
  KamsiAppserver:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-0193dcf9aa4f5654e"
      InstanceType: "t2.micro"
      KeyName: "Kamsi-Bastion-KP"
      BlockDeviceMappings: 
      - DeviceName: "/dev/sdm"
        Ebs: 
          VolumeType: "io1"
          Iops: "100"
          DeleteOnTermination: "true"
          VolumeSize: "10"
  KamsiS3InvoiceBucket:
    Type: "AWS::S3::Bucket"
      
=======
          Iops: 100
          DeleteOnTermination: true
          VolumeSize: 10

  InvoiceS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: "PublicRead"
>>>>>>> 5ad265b6c291ab27c4efbf50b3bb55704d94bdeb
